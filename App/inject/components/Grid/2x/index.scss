$grid-inner-color: $grid-color;
$grid-inner-opacity: $grid-opacity;
$grid-inner-border-size: $grid-border-size;
$grid-inner-border-color: $grid-border-color;
$grid-inner-border-opacity: $grid-border-opacity;

$grid-outer-color: $grid-color;
$grid-outer-opacity: $grid-inner-opacity / 2;
$grid-outer-border-size: $grid-border-size;
$grid-outer-border-color: $grid-border-color;
$grid-outer-border-opacity: $grid-border-opacity;

// 2x grid
.#{$prefix}--grid {
    // full-width transition effect
    transition: max-width $transition-fade;

    &-2x {
        position: fixed;
        left: 0;
        top: 0;
        z-index: 9999999999;
        width: 100%;
        height: 100vh;
        transition: height $transition-in;
        
        &--hide,
        .#{$prefix}--grid--hide & {
            height: 0;
            top: auto;
            bottom: 0;
        }

        .#{$prefix}--grid,
        .#{$prefix}--row,
        [class*="#{$prefix}--col-"],
        [class*="#{$prefix}--col-"]::before {
            height: 100%;
        }
        
        [class*="#{$prefix}--col-"] {
            &,
            &::before {
                transition:
                    box-shadow $transition-in,
                    background-color $transition-fade;
            }

            &::before {
                content: '';
                display: block;
            }
        }

        // column
        &--inner {
            [class*="#{$prefix}--col-"]::before {
                background-color: rgba($grid-inner-color, $grid-inner-opacity);
            }
        }
        &:not(.#{$prefix}--grid-2x--inner) {
            [class*="#{$prefix}--col-"]::before {
                background-color: rgba($grid-inner-color, 0);
            }
        }

        // gutter
        &--outer {
            [class*="#{$prefix}--col-"] {
                &::before {
                    box-shadow:
                        $carbon--grid-gutter/2 0 0 rgba($grid-outer-color, $grid-outer-opacity),
                        ($carbon--grid-gutter/2 * -1) 0 0 rgba($grid-outer-color, $grid-outer-opacity);
                }
            }
        }

        // column border
        &--inner-border {
            [class*="#{$prefix}--col-"] {
                &::before {
                    box-shadow:
                        $grid-inner-border-size 0 0 rgba($grid-inner-border-color, $grid-inner-border-opacity),
                        ($grid-inner-border-size * -1) 0 0 rgba($grid-inner-border-color, $grid-inner-border-opacity);
                }
            }
        }

        // gutter + column border
        &--outer.#{$prefix}--grid-2x--inner-border {
            [class*="#{$prefix}--col-"] {
                &::before {
                    box-shadow:
                        $carbon--grid-gutter/2 0 0 rgba($grid-outer-color, $grid-outer-opacity),
                        ($carbon--grid-gutter/2 * -1) 0 0 rgba($grid-outer-color, $grid-outer-opacity),
                        $grid-inner-border-size 0 0 rgba($grid-inner-border-color, $grid-inner-border-opacity),
                        ($grid-inner-border-size * -1) 0 0 rgba($grid-inner-border-color, $grid-inner-border-opacity);
                }
            }
        }

        // gutter divider
        &--outer-border {
            [class*="#{$prefix}--col-"] {
                box-shadow: $grid-outer-border-size 0 0 rgba($grid-outer-border-color, $grid-outer-border-opacity);
                
                &:first-child {
                    box-shadow: $grid-outer-border-size 0 0 rgba($grid-outer-border-color, $grid-outer-border-opacity),
                    ($grid-outer-border-size * -1) 0 0 rgba($grid-outer-border-color, $grid-outer-border-opacity);
                }
            }
        }

        // breakpoint label
        &::after {
            @include carbon--theme($carbon--theme--g90) {
                @include carbon--type-style('code-01');
                @include carbon--font-family('mono');

                position: fixed;
                background: $ui-background;
                padding: carbon--mini-units(1) ($carbon--grid-gutter / 2);
                color: $text-01;
                right: 0;
                z-index: 9999999999;
                transition: bottom $transition-in;

                .#{$prefix}--grid-2x--breakpoint-label & {
                    bottom: 0;
                }
                
                &,
                .#{$prefix}--grid-2x--hide &,
                .#{$prefix}--grid--hide & {
                    bottom: -32px;
                }
                
                // can we loop through breakpoints?
                @include carbon--breakpoint('sm') {
                    content: 'Breakpoint: Small';
                }
                
                @include carbon--breakpoint('md') {
                    content: 'Breakpoint: Medium';
                }
                
                @include carbon--breakpoint('lg') {
                    content: 'Breakpoint: Large';
                }
                
                @include carbon--breakpoint('xlg') {
                    content: 'Breakpoint: X-Large';
                }
                
                @include carbon--breakpoint('max') {
                    content: 'Breakpoint: Max';
                }
            }
        }
    }
}